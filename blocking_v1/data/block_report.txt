Source Line  Source                                                                                                                                                            CPU Time  Spin Time:Imbalance or Serial Spinning (OpenMP)  Spin Time:Lock Contention (OpenMP)  Spin Time:Communication (MPI)  Spin Time:Other  Overhead Time:Creation (OpenMP)  Overhead Time:Scheduling (OpenMP)  Overhead Time:Reduction (OpenMP)  Overhead Time:Other
-----------  ----------------------------------------------------------------------------------------------------------------------------------------------------------------  --------  -----------------------------------------------  ----------------------------------  -----------------------------  ---------------  -------------------------------  ---------------------------------  --------------------------------  -------------------
10                                                                                                                                                                                                                                                                                                                                                                                                                                                     
11           #define g(x, y) (g[(y)*n+(x)])                                                                                                                                                                                                                                                                                                                                                                                                            
12                                                                                                                                                                                                                                                                                                                                                                                                                                                     
13           int run_block(int n, double d, int* restrict g, double* restrict w, double* restrict wnew, int* restrict degree, int start, int count, double* restrict wlocal)                                                                                                                                                                                                                                                                           
14           {                                                                                                                                                                                                                                                                                                                                                                                                                                         
15               double residual = 0.0;                                                                                                                                                                                                                                                                                                                                                                                                                
16               for (int i=0; i<count; ++i) {                                                                                                                                                                                                                                                                                                                                                                                                         
17                   double sum = 0.0;                                                                                                                                           0.001s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
18                   //do before the block                                                                                                                                                                                                                                                                                                                                                                                                             
19                   for (int j=0; j<start; ++j) {                                                                                                                               0.005s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
20                       //find edges pointing toward i                                                                                                                                                                                                                                                                                                                                                                                                
21                       if (g(j,i+start)) {                                                                                                                                     0.029s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
22                           //count out degree of j                                                                                                                                                                                                                                                                                                                                                                                                   
23                           sum += w[j]/(double)degree[j];                                                                                                                      0.031s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
24                       }                                                                                                                                                                                                                                                                                                                                                                                                                             
25                   }                                                                                                                                                                                                                                                                                                                                                                                                                                 
26                                                                                                                                                                                                                                                                                                                                                                                                                                                     
27                   // do the block                                                                                                                                                                                                                                                                                                                                                                                                                   
28                   for (int j=start; j<start+count; ++j) {                                                                                                                                                                                                                                                                                                                                                                                           
29                       //find edges pointing toward i                                                                                                                                                                                                                                                                                                                                                                                                
30                       if (g(j,i+start)) {                                                                                                                                                                                                                                                                                                                                                                                                           
31                           //count out degree of j                                                                                                                                                                                                                                                                                                                                                                                                   
32                           sum += wnew[j]/(double)degree[j];                                                                                                                   0.002s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
33                       }                                                                                                                                                                                                                                                                                                                                                                                                                             
34                   }                                                                                                                                                                                                                                                                                                                                                                                                                                 
35                                                                                                                                                                                                                                                                                                                                                                                                                                                     
36                   // do after the block                                                                                                                                                                                                                                                                                                                                                                                                             
37                   for (int j=start+count; j<n; ++j) {                                                                                                                         0.001s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
38                       //find edges pointing toward i                                                                                                                                                                                                                                                                                                                                                                                                
39                       if (g(j,i+start)) {                                                                                                                                     0.029s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
40                           //count out degree of j                                                                                                                                                                                                                                                                                                                                                                                                   
41                           sum += w[j]/(double)degree[j];                                                                                                                      0.036s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
42                       }                                                                                                                                                                                                                                                                                                                                                                                                                             
43                   }                                                                                                                                                                                                                                                                                                                                                                                                                                 
44                                                                                                                                                                                                                                                                                                                                                                                                                                                     
45                   double newVal = ((1.0 - d)/(double)n) + (d*sum);                                                                                                                                                                                                                                                                                                                                                                                  
46                   residual += fabs(wnew[i+start] - newVal);                                                                                                                                                                                                                                                                                                                                                                                         
47                   wlocal[i] = newVal;                                                                                                                                                                                                                                                                                                                                                                                                               
48               }                                                                                                                                                                                                                                                                                                                                                                                                                                     
49               return residual < ((double)count)/(1000000.0 * (double)n);                                                                                                                                                                                                                                                                                                                                                                            
50           }                                                                                                                                                                                                                                                                                                                                                                                                                                         
51                                                                                                                                                                                                                                                                                                                                                                                                                                                     
52                                                                                                                                                                                                                                                                                                                                                                                                                                                     
53           /**                                                                                                                                                                                                                                                                                                                                                                                                                                       
54            * Pr(x) = (1-d)/n + d*sum_{n in g(n,x)}(Pr(n)/(outdegree n))                                                                                                                                                                                                                                                                                                                                                                             
