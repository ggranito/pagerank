Source Line  Source                                                                                                                 CPU Time  Spin Time:Imbalance or Serial Spinning (OpenMP)  Spin Time:Lock Contention (OpenMP)  Spin Time:Communication (MPI)  Spin Time:Other  Overhead Time:Creation (OpenMP)  Overhead Time:Scheduling (OpenMP)  Overhead Time:Reduction (OpenMP)  Overhead Time:Other
-----------  ---------------------------------------------------------------------------------------------------------------------  --------  -----------------------------------------------  ----------------------------------  -----------------------------  ---------------  -------------------------------  ---------------------------------  --------------------------------  -------------------
13           /**                                                                                                                                                                                                                                                                                                                                                                                            
14            * Pr(x) = (1-d)/n + d*sum_{n in g(n,x)}(Pr(n)/(outdegree n))                                                                                                                                                                                                                                                                                                                                  
15            * Runs 1 iteration of pagerank                                                                                                                                                                                                                                                                                                                                                                
16            * Returns 1 if done, 0 otherwise                                                                                                                                                                                                                                                                                                                                                              
17            */                                                                                                                                                                                                                                                                                                                                                                                            
18           int run_iteration(int n, double d, int* restrict g, double* restrict w, double* restrict wnew, int* restrict degree)                                                                                                                                                                                                                                                                           
19           {                                                                                                                                                                                                                                                                                                                                                                                              
20               int done = 1;                                                                                                                                                                                                                                                                                                                                                                              
21               #pragma omp parallel for shared(g, w, wnew) reduction(&& : done)                                                     0.001s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
22               for (int i=0; i<n; ++i) {                                                                                                                                                                                                                                                                                                                                                                  
23                   double sum = 0.0;                                                                                                                                                                                                                                                                                                                                                                      
24                   for (int j=0; j<n; ++j) {                                                                                        0.005s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
25                       //find edges pointing toward i                                                                                                                                                                                                                                                                                                                                                     
26                       if (g(j,i)) {                                                                                                0.007s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
27                           //count out degree of j                                                                                                                                                                                                                                                                                                                                                        
28                           sum += w[j]/(double)degree[j];                                                                           0.043s                                               0s                                  0s                             0s               0s                               0s                                 0s                                0s                   0s
29                       }                                                                                                                                                                                                                                                                                                                                                                                  
30                   }                                                                                                                                                                                                                                                                                                                                                                                      
31                   wnew[i] = ((1.0 - d)/(double)n) + (d*sum);                                                                                                                                                                                                                                                                                                                                             
32                   done = fabs(wnew[i] - w[i]) < 1.0/(1000000.0 * (double)n);                                                                                                                                                                                                                                                                                                                             
33               }                                                                                                                                                                                                                                                                                                                                                                                          
34               memcpy(w, wnew, n * sizeof(double));                                                                                                                                                                                                                                                                                                                                                       
35               return done;                                                                                                                                                                                                                                                                                                                                                                               
36           }                                                                                                                                                                                                                                                                                                                                                                                              
37                                                                                                                                                                                                                                                                                                                                                                                                          
38           /**                                                                                                                                                                                                                                                                                                                                                                                            
39            *                                                                                                                                                                                                                                                                                                                                                                                             
